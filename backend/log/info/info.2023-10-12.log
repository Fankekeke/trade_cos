2023-10-12 22:25:20.617 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 2840 (started by Administrator in G:\Project\工地安全预警管理系统的设计与实现\construction_cos\backend)
2023-10-12 22:25:20.619 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-10-12 22:25:22.434 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-10-12 22:25:22.436 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-10-12 22:25:22.498 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2023-10-12 22:25:22.771 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$6aabd94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:22.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:22.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e0fa0938] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:22.957 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:22.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:22.966 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$776b9867] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:22.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$e2eb9a10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.226 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$dbb05164] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$c8f2f476] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$b5340501] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.347 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.349 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2023-10-12 22:25:23.355 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-10-12 22:25:23.539 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-10-12 22:25:23.540 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2023-10-12 22:25:23.540 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2023-10-12 22:25:23.540 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2023-10-12 22:25:23.540 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:23.556 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.410 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.421 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.438 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.439 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.524 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.526 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.545 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.579 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.596 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.617 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$d2ff17f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.620 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$854bda11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.622 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$4062c000] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.628 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$672e372e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.644 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$b50ab587] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.655 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.659 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.678 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.689 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.701 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:24.713 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-12 22:25:25.048 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-10-12 22:25:25.065 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-10-12 22:25:25.071 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 22:25:25.071 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2023-10-12 22:25:25.076 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2023-10-12 22:25:25.232 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-10-12 22:25:25.233 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4580 ms
2023-10-12 22:25:25.702 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2023-10-12 22:25:25.702 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2023-10-12 22:25:25.702 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2023-10-12 22:25:25.702 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2023-10-12 22:25:25.702 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2023-10-12 22:25:25.702 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2023-10-12 22:25:25.703 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2023-10-12 22:25:25.703 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2023-10-12 22:25:26.282 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-10-12 22:25:26.291 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-10-12 22:25:26.291 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2023-10-12 22:25:26.294 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2023-10-12 22:25:26.296 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2023-10-12 22:25:26.296 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-KJDA35RA4FP1697120726283'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2023-10-12 22:25:26.296 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2023-10-12 22:25:26.296 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2023-10-12 22:25:26.297 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@629600d7
2023-10-12 22:25:26.343 febs [main] INFO  p6spy - 2023-10-12 22:25:26 | 耗时 6 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-10-12 22:25:26.766 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-10-12 22:25:27.873 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-10-12 22:25:27.920 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-10-12 22:25:27.993 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2023-10-12 22:25:28.005 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-10-12 22:25:28.013 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2023-10-12 22:25:28.025 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-10-12 22:25:28.027 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.913 seconds (JVM running for 9.136)
2023-10-12 22:25:28.034 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-10-12 22:25:28.129 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-10-12 22:25:28.129 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-10-12 22:25:28.130 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-10-12 22:25:28.159 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2023-10-12 22:25:28.169 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 7 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-12 22:25:28.227 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-10-12 22:25:28.244 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-10-12 22:25:28.257 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2023-10-12 22:25:28.261 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-12 22:25:28.263 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-10-12 22:25:28.265 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-10-12 22:25:28.267 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2023-10-12 22:25:28.269 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-12 22:25:28.270 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-10-12 22:25:28.272 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-10-12 22:25:28.273 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2023-10-12 22:25:28.275 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-12 22:25:28.277 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2023-10-12 22:25:28.279 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2023-10-12 22:25:28.281 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2023-10-12 22:25:28.282 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-12 22:25:28.285 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2023-10-12 22:25:28.287 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2023-10-12 22:25:28.288 febs [main] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2023-10-12 22:25:28.289 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-10-12 22:25:28.289 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-10-12 22:25:28.289 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-10-12 22:25:28.289 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-10-12 22:25:28.289 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-10-12T22:25:28.289
2023-10-12 22:25:28.483 febs [RMI TCP Connection(2)-192.168.1.3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 22:25:28.483 febs [RMI TCP Connection(2)-192.168.1.3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 22:25:28.484 febs [RMI TCP Connection(3)-192.168.1.3] INFO  p6spy - 2023-10-12 22:25:28 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2023-10-12 22:25:28.493 febs [RMI TCP Connection(2)-192.168.1.3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2023-10-12 22:25:29.007 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2023-10-12 22:25:29.037 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2023-10-12 22:25:29.037 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-KJDA35RA4FP1697034306175"'s failed in-progress jobs.
2023-10-12 22:25:29.044 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697120726283 started.
2023-10-12 22:50:49.389 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-12 22:50:49.484 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-12T22:50:49.462+0800' WHERE username = 'admin';
2023-10-12 22:50:49.488 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-12 22:50:49.509 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 6 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2023-10-12T22:50:49.495+0800', '', '127.0.0.1' );
2023-10-12 22:50:49.592 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:50:49.615 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2023-10-12 22:50:49.846 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:50:49.848 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:50:49.855 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-12 22:50:49.858 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-12 22:50:49.861 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-12 22:50:49.864 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-12 22:50:49.867 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2023-10-12 22:50:49.867 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 5 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-12 22:50:49.874 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 5 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-12 22:50:49.881 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 3 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-12 22:50:49.883 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-12 22:50:49.886 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-12 22:50:49.889 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:50:49 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-12 22:50:54.482 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:50:54.527 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 22:50:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info;
2023-10-12 22:50:54.532 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 22:50:54 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info LIMIT 0,10;
2023-10-12 22:50:56.629 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:50:56.629 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:50:56.642 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 22:50:56 | 耗时 3 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-12 22:50:56.661 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 22:50:56 | 耗时 18 ms | SQL 语句：
SELECT COUNT(1) FROM work_info WHERE 1 = 1;
2023-10-12 22:50:56.663 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 22:50:56 | 耗时 0 ms | SQL 语句：
select id, code, work_name, content, principal, work_staff, status, create_date, del_flag from work_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 22:51:05.003 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:05.009 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 22:51:05 | 耗时 0 ms | SQL 语句：
UPDATE work_info SET work_name='渔帆暗涌', content='渔帆暗涌 第壹章 DREDGE CHAPTER ONE卖掉你的渔获，升级你的船，挖掘深埋已久的秘密。探索一个神秘的群岛，发现为什么有些事情最好被遗忘', principal='孙笑川' WHERE ID=1;
2023-10-12 22:51:05.041 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:05.047 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:51:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM work_info WHERE 1 = 1;
2023-10-12 22:51:05.048 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:51:05 | 耗时 0 ms | SQL 语句：
select id, code, work_name, content, principal, work_staff, status, create_date, del_flag from work_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 22:51:10.284 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:10.288 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:10.289 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:10.304 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 22:51:10 | 耗时 11 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:51:12.740 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:12.740 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:12.743 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 22:51:12 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:51:12.745 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:14.293 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:14.293 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:14.297 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 22:51:14 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:51:14.298 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:14.320 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-12 22:51:14 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM safety_inspection si LEFT JOIN archives_info ai ON (ai.code = si.staff_code) LEFT JOIN station_info sti ON (sti.code = si.station_code) WHERE 1 = 1;
2023-10-12 22:51:18.759 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:18.759 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:18.762 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 22:51:18 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-12 22:51:18.775 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 22:51:18 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM work_evaluation we LEFT JOIN archives_info ai ON (ai.code = we.staff_code) WHERE 1 = 1;
2023-10-12 22:51:18.777 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 22:51:18 | 耗时 0 ms | SQL 语句：
select we.id, we.staff_code, we.work_score, we.attendance_score, we.quality_score, we.`year`, we.`month`, we.appraiser, we.remark, we.create_date, we.del_flag, ai.name, ai.sex, ai.phone from work_evaluation we left join archives_info ai on (ai.code = we.staff_code) where 1 = 1 order by we.create_date desc LIMIT 0,10;
2023-10-12 22:51:41.944 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:41.944 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:41.945 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:41.946 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 22:51:41 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:51:41.948 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 22:51:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM safety_inspection si LEFT JOIN archives_info ai ON (ai.code = si.staff_code) LEFT JOIN station_info sti ON (sti.code = si.station_code) WHERE 1 = 1;
2023-10-12 22:51:55.757 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:55.757 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:51:55.759 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 22:51:55 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:52:42.678 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:52:42.678 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:52:42.691 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 22:52:42 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:54:09.285 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:54:09.285 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:54:09.287 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 22:54:09 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:54:09.287 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 22:54:09 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-12 22:54:13.033 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:54:13.039 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-12 22:54:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM safety_inspection si LEFT JOIN archives_info ai ON (ai.code = si.staff_code) LEFT JOIN station_info sti ON (sti.code = si.station_code) WHERE 1 = 1;
2023-10-12 22:54:14.009 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:54:14.013 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 22:54:14 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM safety_inspection si LEFT JOIN archives_info ai ON (ai.code = si.staff_code) LEFT JOIN station_info sti ON (sti.code = si.station_code) WHERE 1 = 1;
2023-10-12 22:54:16.329 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:54:16.329 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:54:16.332 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-12 22:54:16 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-12 22:54:16.332 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 22:54:16 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:56:23.803 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:56:23.808 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 22:56:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM safety_inspection si LEFT JOIN archives_info ai ON (ai.code = si.staff_code) LEFT JOIN station_info sti ON (sti.code = si.station_code) WHERE 1 = 1;
2023-10-12 22:56:26.850 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:56:26.850 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 22:56:26.853 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 22:56:26 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,remark,phone,del_flag FROM station_info WHERE del_flag = '0';
2023-10-12 22:56:26.853 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 22:56:26 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-12 23:04:12.084 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-12 23:04:12.090 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-12T23:04:12.085+0800' WHERE username = 'mrbird';
2023-10-12 23:04:12.093 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-12 23:04:12.099 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2023-10-12T23:04:12.096+0800', '', '127.0.0.1' );
2023-10-12 23:04:12.116 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:04:12.120 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2023-10-12 23:04:12.310 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:04:12.310 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:04:12.314 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-12 23:04:12.314 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-12 23:04:12.316 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-12 23:04:12.318 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-12 23:04:12.318 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-12 23:04:12.320 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-12 23:04:12.320 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-12 23:04:12.322 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2023-10-12 23:04:12.322 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-12 23:04:12.325 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-12 23:04:12.328 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-12 23:04:12 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-12 23:04:21.149 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:04:21.156 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-12 23:04:21 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2023-10-12 23:04:46.409 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:04:46.417 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 23:04:46 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2023-10-12 23:05:38.726 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:05:38.745 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:38 | 耗时 2 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, path, component, icon, type, order_num, create_time ) VALUES ( 139, '站点管理', '/manage/station', 'manage/station/Station', '', '0', 9.0, '2023-10-12T23:05:38.740+0800' );
2023-10-12 23:05:38.768 febs [asyncTaskExecutor-1] INFO  p6spy - 2023-10-12 23:05:38 | 耗时 8 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 10, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=164, parentId=139, menuName=站点管理, path=/manage/station, component=manage/station/Station, perms=null, icon=, type=0, orderNum=9.0, createTime=Thu Oct 12 23:05:38 CST 2023, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2023-10-12T23:05:38.757+0800', '' );
2023-10-12 23:05:38.897 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:05:38.971 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:05:38 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2023-10-12 23:05:40.852 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:05:40.941 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:05:40 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-10-12 23:05:40.942 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:05:40 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2023-10-12 23:05:45.701 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:05:45.705 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 23:05:45 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2023-10-12 23:05:45.726 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:05:45.734 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-12 23:05:45 | 耗时 0 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '74';
2023-10-12 23:05:49.029 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:05:49.040 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('74');
2023-10-12 23:05:49.045 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 2 ms | SQL 语句：
UPDATE t_role SET role_name='超级管理员', remark='', modify_time='2023-10-12T23:05:49.041+0800' WHERE ROLE_ID=74;
2023-10-12 23:05:49.049 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 74;
2023-10-12 23:05:49.052 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 148 );
2023-10-12 23:05:49.054 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 149 );
2023-10-12 23:05:49.056 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 150 );
2023-10-12 23:05:49.058 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 151 );
2023-10-12 23:05:49.060 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 152 );
2023-10-12 23:05:49.063 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 153 );
2023-10-12 23:05:49.065 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 154 );
2023-10-12 23:05:49.067 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 162 );
2023-10-12 23:05:49.069 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 139 );
2023-10-12 23:05:49.071 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 140 );
2023-10-12 23:05:49.073 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 141 );
2023-10-12 23:05:49.075 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 142 );
2023-10-12 23:05:49.077 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 143 );
2023-10-12 23:05:49.079 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 144 );
2023-10-12 23:05:49.081 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 145 );
2023-10-12 23:05:49.083 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 146 );
2023-10-12 23:05:49.085 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 147 );
2023-10-12 23:05:49.086 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 164 );
2023-10-12 23:05:49.088 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='13' ;
2023-10-12 23:05:49.089 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2023-10-12 23:05:49.091 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2023-10-12 23:05:49.095 febs [asyncTaskExecutor-2] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 0 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改角色', 60, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=74, roleName=超级管理员, remark=, createTime=null, modifyTime=Thu Oct 12 23:05:49 CST 2023, createTimeFrom=null, createTimeTo=null, menuId=148,149,150,151,152,153,154,162,139,140,141,142,143,144,145,146,147,164)"', '127.0.0.1', '2023-10-12T23:05:49.093+0800', '' );
2023-10-12 23:05:49.128 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:05:49.135 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-10-12 23:05:49.136 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:05:49 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2023-10-12 23:06:07.295 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-12 23:06:07.298 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-12T23:06:07.296+0800' WHERE username = 'admin';
2023-10-12 23:06:07.299 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-12 23:06:07.305 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2023-10-12T23:06:07.302+0800', '', '127.0.0.1' );
2023-10-12 23:06:07.319 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:06:07.322 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2023-10-12 23:06:07.486 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:06:07.486 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:06:07.489 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-12 23:06:07.489 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-12 23:06:07.491 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-12 23:06:07.492 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-12 23:06:07.492 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-12 23:06:07.494 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-12 23:06:07.494 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-12 23:06:07.495 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2023-10-12 23:06:07.495 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-12 23:06:07.497 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-12 23:06:07.499 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:06:07 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-12 23:06:11.351 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:06:11.369 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:06:11 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:07:49.638 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:07:49.689 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-12 23:07:49 | 耗时 1 ms | SQL 语句：
INSERT INTO station_info ( station_name, station_address, longitude, latitude, administrator, images, create_date, remark, phone, del_flag ) VALUES ( '小红门站点', '北京市朝阳区小红门后街130号', 116.465449, 39.835043, '张三', 'SA1697123266532.jpg', '2023-10-12 23:07:49', '小红门站点20231012', '15010399301', '0' );
2023-10-12 23:08:23.397 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:08:23.402 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:08:23 | 耗时 2 ms | SQL 语句：
INSERT INTO station_info ( station_name, station_address, longitude, latitude, administrator, images, create_date, remark, phone, del_flag ) VALUES ( '小红门站点', '北京市朝阳区小红门后街130号', 116.465449, 39.835043, '张三', 'SA1697123266532.jpg', '2023-10-12 23:08:23', '小红门站点20231012', '15010399301', '0' );
2023-10-12 23:08:23.426 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:08:23.430 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:08:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:08:23.431 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:08:23 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:10:03.498 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:10:03.501 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 23:10:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:10:03.502 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 23:10:03 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:11:03.738 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:11:03.745 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:11:03 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:11:03.746 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:11:03 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:11:24.410 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:11:24.414 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:11:24 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:11:24.415 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:11:24 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:14:01.715 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:14:01.725 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 23:14:01 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:14:01.726 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 23:14:01 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:14:36.524 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:14:36.539 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 23:14:36 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:14:36.540 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 23:14:36 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:25:31.686 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-10-12 23:26:31.166 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:26:31.178 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:26:31 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:26:31.179 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:26:31 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:27:00.974 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:27:00.989 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:27:00 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:27:00.990 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-12 23:27:00 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:27:09.602 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:27:09.606 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 23:27:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:27:09.607 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-12 23:27:09 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:27:36.073 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:27:36.077 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 23:27:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:27:36.078 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-12 23:27:36 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-12 23:29:45.020 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-12 23:29:45.099 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:29:45 | 耗时 74 ms | SQL 语句：
SELECT COUNT(1) FROM station_info WHERE 1 = 1;
2023-10-12 23:29:45.101 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-12 23:29:45 | 耗时 0 ms | SQL 语句：
select id, code, station_name, station_address, longitude, latitude, administrator, images, remark, phone, create_date, del_flag from station_info where 1 = 1 order by create_date desc LIMIT 0,10;
