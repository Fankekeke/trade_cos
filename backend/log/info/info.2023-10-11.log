2023-10-11 22:07:17.035 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 12036 (started by Administrator in G:\Project\工地安全预警管理系统的设计与实现\construction_cos\backend)
2023-10-11 22:07:17.038 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-10-11 22:07:18.476 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-10-11 22:07:18.477 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-10-11 22:07:18.531 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33ms. Found 0 repository interfaces.
2023-10-11 22:07:18.806 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$ec9453e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:18.922 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:18.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c6e39f8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.000 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d552ebb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.027 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c8d53064] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.261 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c199e7b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$aedc8aca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.358 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9b1d9b55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.368 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2023-10-11 22:07:19.373 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-10-11 22:07:19.526 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-10-11 22:07:19.526 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2023-10-11 22:07:19.526 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2023-10-11 22:07:19.526 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2023-10-11 22:07:19.526 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:19.544 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.292 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.297 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.316 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.401 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b8e8ae4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6b357065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.458 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$264c5654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.470 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4d17cd82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$9af44bdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.497 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.499 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.516 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.533 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.533 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.540 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:07:20.818 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-10-11 22:07:20.828 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-10-11 22:07:20.831 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-11 22:07:20.832 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2023-10-11 22:07:20.836 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2023-10-11 22:07:20.953 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-10-11 22:07:20.954 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3888 ms
2023-10-11 22:07:21.395 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2023-10-11 22:07:21.395 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2023-10-11 22:07:21.395 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2023-10-11 22:07:21.395 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2023-10-11 22:07:21.395 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2023-10-11 22:07:21.395 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2023-10-11 22:07:21.395 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2023-10-11 22:07:21.396 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2023-10-11 22:07:21.932 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-10-11 22:07:21.941 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-10-11 22:07:21.942 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2023-10-11 22:07:21.944 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2023-10-11 22:07:21.946 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2023-10-11 22:07:21.946 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-KJDA35RA4FP1697033241933'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2023-10-11 22:07:21.946 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2023-10-11 22:07:21.946 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2023-10-11 22:07:21.947 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@17477bbb
2023-10-11 22:07:21.998 febs [main] INFO  p6spy - 2023-10-11 22:07:21 | 耗时 9 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-10-11 22:07:22.395 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-10-11 22:07:23.361 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-10-11 22:07:23.404 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-10-11 22:07:23.468 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2023-10-11 22:07:23.479 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-10-11 22:07:23.487 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2023-10-11 22:07:23.487 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-10-11 22:07:23.499 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-10-11 22:07:23.502 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.888 seconds (JVM running for 7.635)
2023-10-11 22:07:23.510 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-10-11 22:07:23.511 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-10-11 22:07:23.511 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-10-11 22:07:23.539 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 4 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2023-10-11 22:07:23.548 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:07:23.604 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-10-11 22:07:23.620 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-10-11 22:07:23.635 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2023-10-11 22:07:23.640 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:07:23.643 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-10-11 22:07:23.645 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-10-11 22:07:23.648 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2023-10-11 22:07:23.651 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:07:23.653 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-10-11 22:07:23.655 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-10-11 22:07:23.658 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2023-10-11 22:07:23.660 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:07:23.665 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2023-10-11 22:07:23.669 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2023-10-11 22:07:23.670 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2023-10-11 22:07:23.672 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:07:23.674 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2023-10-11 22:07:23.677 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2023-10-11 22:07:23.678 febs [main] INFO  p6spy - 2023-10-11 22:07:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2023-10-11 22:07:23.679 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-10-11 22:07:23.679 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-10-11 22:07:23.679 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-10-11 22:07:23.679 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-10-11 22:07:23.679 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-10-11T22:07:23.679
2023-10-11 22:07:24.097 febs [RMI TCP Connection(1)-192.168.1.3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-11 22:07:24.097 febs [RMI TCP Connection(1)-192.168.1.3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-11 22:07:24.106 febs [RMI TCP Connection(1)-192.168.1.3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-10-11 22:07:24.161 febs [RMI TCP Connection(1)-192.168.1.3] INFO  p6spy - 2023-10-11 22:07:24 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2023-10-11 22:07:24.479 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2023-10-11 22:07:24.494 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2023-10-11 22:07:24.494 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-KJDA35RA4FP1696864335262"'s failed in-progress jobs.
2023-10-11 22:07:24.499 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697033241933 started.
2023-10-11 22:07:26.810 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:07:26.893 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:07:26 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info;
2023-10-11 22:07:26.897 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:07:26 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info LIMIT 0,10;
2023-10-11 22:07:41.271 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-11 22:07:41.293 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-11T22:07:41.277+0800' WHERE username = 'admin';
2023-10-11 22:07:41.295 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:07:41.311 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2023-10-11T22:07:41.302+0800', '', '127.0.0.1' );
2023-10-11 22:07:41.357 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:07:41.367 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2023-10-11 22:07:41.525 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:07:41.528 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:07:41.534 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 22:07:41.536 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 22:07:41.537 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:07:41.539 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:07:41.542 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 22:07:41.545 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2023-10-11 22:07:41.548 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 9 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 22:07:41.555 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 4 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 22:07:41.559 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 22:07:41.562 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 22:07:41.565 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:07:41 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 22:07:43.994 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:07:44.011 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:07:44 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM archives_info WHERE 1 = 1;
2023-10-11 22:07:44.013 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:07:44 | 耗时 0 ms | SQL 语句：
select id, code, name, sex, birthday, native_address, id_card, images, diploma, school_name, address, mail, phone, create_date, del_flag from archives_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-11 22:07:46.595 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:07:46.598 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:07:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info;
2023-10-11 22:07:46.599 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:07:46 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info LIMIT 0,10;
2023-10-11 22:07:49.261 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:07:49.261 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:07:49.265 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:07:49 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-11 22:07:49.275 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:07:49 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM work_info WHERE 1 = 1;
2023-10-11 22:07:49.276 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:07:49 | 耗时 0 ms | SQL 语句：
select id, code, work_name, content, principal, work_staff, status, create_date, del_flag from work_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-11 22:08:06.148 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:06.154 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:08:06 | 耗时 0 ms | SQL 语句：
UPDATE work_info SET work_name='渔帆暗涌', content='渔帆暗涌 第壹章 DREDGE CHAPTER ONE卖掉你的渔获，升级你的船，挖掘深埋已久的秘密。探索一个神秘的群岛，发现为什么有些事情最好被遗忘', principal='孙笑川' WHERE ID=1;
2023-10-11 22:08:06.187 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:06.193 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:08:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM work_info WHERE 1 = 1;
2023-10-11 22:08:06.195 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:08:06 | 耗时 0 ms | SQL 语句：
select id, code, work_name, content, principal, work_staff, status, create_date, del_flag from work_info where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-11 22:08:20.544 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:20.546 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:20.546 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:20.557 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:08:20 | 耗时 5 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:08:23.029 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:23.030 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:23.033 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:23.034 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:08:23 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:08:24.414 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:24.414 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:24.418 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:08:24 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:08:24.420 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:29.788 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:33.066 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:33.066 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:33.066 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:08:33.069 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:08:33 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-11 22:08:33.069 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:08:33 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:08:33.081 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:08:33 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM work_evaluation we LEFT JOIN archives_info ai ON (ai.code = we.staff_code) WHERE 1 = 1;
2023-10-11 22:08:33.082 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:08:33 | 耗时 0 ms | SQL 语句：
select we.id, we.staff_code, we.work_score, we.attendance_score, we.quality_score, we.`year`, we.`month`, we.appraiser, we.remark, we.create_date, we.del_flag, ai.name, ai.sex, ai.phone from work_evaluation we left join archives_info ai on (ai.code = we.staff_code) where 1 = 1 order by we.create_date desc LIMIT 0,10;
2023-10-11 22:11:45.255 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697033241933 paused.
2023-10-11 22:11:45.255 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-10-11 22:11:45.262 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2023-10-11 22:11:45.262 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2023-10-11 22:11:45.262 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697033241933 shutting down.
2023-10-11 22:11:45.262 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697033241933 paused.
2023-10-11 22:11:45.263 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697033241933 shutdown complete.
2023-10-11 22:11:45.266 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2023-10-11 22:11:45.267 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2023-10-11 22:11:45.269 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2023-10-11 22:25:02.017 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 14948 (started by Administrator in G:\Project\工地安全预警管理系统的设计与实现\construction_cos\backend)
2023-10-11 22:25:02.020 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-10-11 22:25:02.797 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-10-11 22:25:02.799 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-10-11 22:25:02.842 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33ms. Found 0 repository interfaces.
2023-10-11 22:25:03.096 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$80b41c27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5b0367cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f174f6fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$5cf4f8a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.525 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$55b9aff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.540 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.543 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.613 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$42fc5309] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.621 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.626 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2f3d6394] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.632 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.635 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2023-10-11 22:25:03.640 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-10-11 22:25:03.794 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-10-11 22:25:03.795 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2023-10-11 22:25:03.795 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2023-10-11 22:25:03.795 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2023-10-11 22:25:03.795 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.806 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:03.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.457 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.482 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.490 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.521 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.537 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.557 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.558 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.560 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.579 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.580 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.601 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.622 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$4d08768b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.644 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ff5538a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ba6c1e93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.651 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.659 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e13795c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.663 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.665 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$2f14141a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.685 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.687 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.705 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.714 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:04.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-10-11 22:25:05.028 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-10-11 22:25:05.037 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-10-11 22:25:05.040 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-11 22:25:05.041 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2023-10-11 22:25:05.047 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2023-10-11 22:25:05.156 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-10-11 22:25:05.156 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3076 ms
2023-10-11 22:25:05.598 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2023-10-11 22:25:05.598 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2023-10-11 22:25:05.598 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2023-10-11 22:25:05.598 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2023-10-11 22:25:05.598 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2023-10-11 22:25:05.598 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2023-10-11 22:25:05.598 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2023-10-11 22:25:05.598 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2023-10-11 22:25:06.175 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-10-11 22:25:06.183 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-10-11 22:25:06.183 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2023-10-11 22:25:06.186 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
2023-10-11 22:25:06.188 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
2023-10-11 22:25:06.188 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'WIN-KJDA35RA4FP1697034306175'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2023-10-11 22:25:06.188 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
2023-10-11 22:25:06.188 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2023-10-11 22:25:06.189 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@bcd9ed6
2023-10-11 22:25:06.229 febs [main] INFO  p6spy - 2023-10-11 22:25:06 | 耗时 3 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-10-11 22:25:06.615 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-10-11 22:25:07.618 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-10-11 22:25:07.665 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-10-11 22:25:07.732 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
2023-10-11 22:25:07.743 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-10-11 22:25:07.751 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2023-10-11 22:25:07.751 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-10-11 22:25:07.762 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-10-11 22:25:07.764 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.151 seconds (JVM running for 6.864)
2023-10-11 22:25:07.771 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-10-11 22:25:07.772 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-10-11 22:25:07.772 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-10-11 22:25:07.797 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2023-10-11 22:25:07.803 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:25:07.858 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-10-11 22:25:07.869 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-10-11 22:25:07.881 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2023-10-11 22:25:07.885 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:25:07.888 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-10-11 22:25:07.891 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-10-11 22:25:07.894 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2023-10-11 22:25:07.897 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:25:07.902 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-10-11 22:25:07.905 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-10-11 22:25:07.909 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2023-10-11 22:25:07.912 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:25:07.917 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2023-10-11 22:25:07.920 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2023-10-11 22:25:07.922 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2023-10-11 22:25:07.925 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:25:07.927 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou';
2023-10-11 22:25:07.930 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2023-10-11 22:25:07.931 febs [main] INFO  p6spy - 2023-10-11 22:25:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2023-10-11 22:25:07.932 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-10-11 22:25:07.932 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-10-11 22:25:07.932 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-10-11 22:25:07.932 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-10-11 22:25:07.932 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-10-11T22:25:07.932
2023-10-11 22:25:08.214 febs [RMI TCP Connection(2)-192.168.1.3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-11 22:25:08.214 febs [RMI TCP Connection(2)-192.168.1.3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-11 22:25:08.214 febs [RMI TCP Connection(1)-192.168.1.3] INFO  p6spy - 2023-10-11 22:25:08 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2023-10-11 22:25:08.224 febs [RMI TCP Connection(2)-192.168.1.3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2023-10-11 22:25:08.735 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
2023-10-11 22:25:08.742 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
2023-10-11 22:25:08.743 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "WIN-KJDA35RA4FP1697033241933"'s failed in-progress jobs.
2023-10-11 22:25:08.747 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697034306175 started.
2023-10-11 22:26:00.069 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:26:00.069 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:26:00.110 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 22:26:00.114 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 22:26:00.117 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 1 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 22:26:00.119 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 22:26:00.122 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 22:26:00.124 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 22:26:00.165 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 7 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 22:26:00.166 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:26:00.168 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:26:00.170 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 22:26:00.173 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:26:00 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2023-10-11 22:26:52.353 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-11 22:26:52.378 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:26:52 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-11T22:26:52.358+0800' WHERE username = 'fank';
2023-10-11 22:26:52.380 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:26:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:26:52.391 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:26:52 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2023-10-11T22:26:52.385+0800', '', '127.0.0.1' );
2023-10-11 22:26:52.419 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:26:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'fank';
2023-10-11 22:26:52.423 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:26:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'fank';
2023-10-11 22:26:55.985 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-11 22:26:55.992 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:26:55 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-11T22:26:55.987+0800' WHERE username = 'admin';
2023-10-11 22:26:55.994 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:26:55 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:26:55.998 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:26:55 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2023-10-11T22:26:55.995+0800', '', '127.0.0.1' );
2023-10-11 22:26:56.015 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:26:56.025 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2023-10-11 22:26:56.176 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:26:56.176 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:26:56.178 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 22:26:56.180 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 22:26:56.180 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 22:26:56.181 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:26:56.182 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 22:26:56.182 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:26:56.184 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 22:26:56.184 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 22:26:56.185 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2023-10-11 22:26:56.185 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 22:26:56.188 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:26:56 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 22:28:00.770 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:00.839 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:28:00 | 耗时 20 ms | SQL 语句：
SELECT COUNT(1) FROM safe_education WHERE 1 = 1;
2023-10-11 22:28:00.843 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:28:00 | 耗时 0 ms | SQL 语句：
select id, title, content, images, meet_room, host_name, time_order, create_date, del_flag from safe_education where 1 = 1 order by create_date desc LIMIT 0,10;
2023-10-11 22:28:21.420 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:21.420 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:21.420 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:21.441 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:28:21 | 耗时 11 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:28:21.441 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:28:21 | 耗时 11 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-11 22:28:21.453 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:28:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM work_evaluation we LEFT JOIN archives_info ai ON (ai.code = we.staff_code) WHERE 1 = 1;
2023-10-11 22:28:21.454 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:28:21 | 耗时 0 ms | SQL 语句：
select we.id, we.staff_code, we.work_score, we.attendance_score, we.quality_score, we.`year`, we.`month`, we.appraiser, we.remark, we.create_date, we.del_flag, ai.name, ai.sex, ai.phone from work_evaluation we left join archives_info ai on (ai.code = we.staff_code) where 1 = 1 order by we.create_date desc LIMIT 0,10;
2023-10-11 22:28:23.122 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:23.126 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:28:23 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:28:23.128 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:23.128 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:37.746 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:37.746 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:37.746 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:37.749 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:28:37 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-11 22:28:37.749 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:28:37 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:28:37.753 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:28:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM work_evaluation we LEFT JOIN archives_info ai ON (ai.code = we.staff_code) WHERE 1 = 1;
2023-10-11 22:28:37.754 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:28:37 | 耗时 0 ms | SQL 语句：
select we.id, we.staff_code, we.work_score, we.attendance_score, we.quality_score, we.`year`, we.`month`, we.appraiser, we.remark, we.create_date, we.del_flag, ai.name, ai.sex, ai.phone from work_evaluation we left join archives_info ai on (ai.code = we.staff_code) where 1 = 1 order by we.create_date desc LIMIT 0,10;
2023-10-11 22:28:40.173 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:40.177 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:28:40 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:28:40.177 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:40.177 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:48.350 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:48.350 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:48.354 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:28:48 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:28:55.977 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:55.977 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:55.977 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:28:55.980 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:28:55 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-11 22:28:55.980 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:28:55 | 耗时 0 ms | SQL 语句：
SELECT ID,code,station_name,station_address,longitude,latitude,administrator,images,create_date,del_flag FROM station_info WHERE del_flag = '0';
2023-10-11 22:28:55.981 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:28:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM work_evaluation we LEFT JOIN archives_info ai ON (ai.code = we.staff_code) WHERE 1 = 1;
2023-10-11 22:28:55.982 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:28:55 | 耗时 0 ms | SQL 语句：
select we.id, we.staff_code, we.work_score, we.attendance_score, we.quality_score, we.`year`, we.`month`, we.appraiser, we.remark, we.create_date, we.del_flag, ai.name, ai.sex, ai.phone from work_evaluation we left join archives_info ai on (ai.code = we.staff_code) where 1 = 1 order by we.create_date desc LIMIT 0,10;
2023-10-11 22:30:01.040 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:30:01.074 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:30:01 | 耗时 22 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2023-10-11 22:30:59.250 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:30:59.270 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:30:59 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM goods_request gr LEFT JOIN archives_info si ON (si.id = gr.user_id) WHERE 1 = 1;
2023-10-11 22:31:00.869 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:31:00.892 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:31:00 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2023-10-11 22:31:00.893 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:31:00 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2023-10-11 22:31:03.247 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:31:03.247 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:31:03.247 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:31:03.253 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:31:03 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:31:03.256 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:31:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2023-10-11 22:31:03.258 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:31:03 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2023-10-11 22:31:03.261 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:31:03.263 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:31:03 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:32:33.471 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:32:33.471 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:32:33.475 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:32:33 | 耗时 2 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:32:33.475 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:32:33 | 耗时 2 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-11 22:32:49.716 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:32:49.720 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:32:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2023-10-11 22:32:49.721 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:32:49 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2023-10-11 22:32:52.104 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:32:52.123 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:32:52 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2023-10-11 22:32:52.124 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:32:52 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2023-10-11 22:32:53.384 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:32:53.384 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:32:53.384 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:32:53.386 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:32:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:32:53.386 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:32:53 | 耗时 0 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-11 22:32:53.387 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:32:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2023-10-11 22:32:53.388 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:32:53 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2023-10-11 22:32:53.390 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:32:53.392 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:32:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:33:37.294 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:33:37.311 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:33:37 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN archives_info si ON (si.id = so.user_id) WHERE 1 = 1;
2023-10-11 22:34:15.823 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:34:15.826 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:34:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN archives_info si ON (si.id = so.user_id) WHERE 1 = 1;
2023-10-11 22:34:18.827 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:34:18.827 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:34:18.831 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:34:18 | 耗时 2 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:34:18.832 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:34:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2023-10-11 22:34:18.832 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:34:18 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 0,10;
2023-10-11 22:34:21.572 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:34:21.581 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:34:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM consumable_type;
2023-10-11 22:34:21.582 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:34:21 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type LIMIT 0,10;
2023-10-11 22:34:36.272 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-11 22:34:36.276 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-11T22:34:36.273+0800' WHERE username = 'mrbird';
2023-10-11 22:34:36.279 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:34:36.284 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2023-10-11T22:34:36.281+0800', '', '127.0.0.1' );
2023-10-11 22:34:36.300 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:34:36.303 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2023-10-11 22:34:36.458 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:34:36.458 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:34:36.461 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 22:34:36.461 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 22:34:36.463 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:34:36.463 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 22:34:36.464 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:34:36.464 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 22:34:36.466 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 22:34:36.466 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 22:34:36.468 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 22:34:36.468 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2023-10-11 22:34:36.469 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:34:36 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 22:37:00.495 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:37:00.525 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:37:00 | 耗时 14 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-10-11 22:37:00.526 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:37:00 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2023-10-11 22:37:03.187 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:37:03.194 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:37:03 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2023-10-11 22:37:04.465 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:37:04.465 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:37:04.478 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:37:04 | 耗时 0 ms | SQL 语句：
SELECT DEPT_ID,parent_id,dept_name,order_num,create_time,modify_time FROM t_dept ORDER BY order_num ASC;
2023-10-11 22:37:04.481 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:37:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-10-11 22:37:04.483 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:37:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 group by u.username, u.user_id, u.password, u.email, u.mobile, u. STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId ASC LIMIT 0,10;
2023-10-11 22:52:01.417 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:52:01.417 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:52:01.420 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 22:52:01.422 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 22:52:01.423 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 22:52:01.424 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 22:52:01.425 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:52:01.425 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 22:52:01.425 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:52:01.426 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 22:52:01.426 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 22:52:01.427 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 22:52:01.427 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:52:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2023-10-11 22:53:24.016 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-11 22:53:24.019 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-11T22:53:24.017+0800' WHERE username = 'admin';
2023-10-11 22:53:24.021 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:53:24.028 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2023-10-11T22:53:24.025+0800', '', '127.0.0.1' );
2023-10-11 22:53:24.042 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:53:24.046 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2023-10-11 22:53:24.200 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:53:24.200 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:53:24.203 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 22:53:24.203 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 22:53:24.204 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:53:24.205 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 22:53:24.206 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:53:24.206 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 22:53:24.207 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 22:53:24.207 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 22:53:24.209 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 22:53:24.209 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2023-10-11 22:53:24.210 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:53:24 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 22:55:09.732 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:09.745 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:55:09 | 耗时 10 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2023-10-11 22:55:09.746 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:55:09 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2023-10-11 22:55:11.211 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:11.215 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:11.215 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:11.216 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:55:11 | 耗时 2 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:55:11.220 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:55:11 | 耗时 1 ms | SQL 语句：
SELECT ID,code,name,sex,birthday,native_address,id_card,images,diploma,school_name,address,mail,phone,create_date,del_flag FROM archives_info WHERE del_flag = '0';
2023-10-11 22:55:11.221 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:55:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2023-10-11 22:55:11.223 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 22:55:11 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2023-10-11 22:55:11.223 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:11.225 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:55:11 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:55:12.982 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:12.987 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:55:12 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM stock_out so LEFT JOIN archives_info si ON (si.id = so.user_id) WHERE 1 = 1;
2023-10-11 22:55:14.573 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:14.575 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 22:55:14 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:55:14.576 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:14.579 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:55:14 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0;
2023-10-11 22:55:14.580 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:55:14 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type_id AS typeId, si.type, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, si.is_in, si.to_user_id, cy.`name` AS consumableName FROM stock_info si LEFT JOIN consumable_type cy ON (cy.id = si.type_id) WHERE si.is_in != 0 LIMIT 0,10;
2023-10-11 22:55:15.955 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:15.958 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:55:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM consumable_type;
2023-10-11 22:55:15.958 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:55:15 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type LIMIT 0,10;
2023-10-11 22:55:53.254 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-11 22:55:53.258 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-11T22:55:53.255+0800' WHERE username = 'caigou';
2023-10-11 22:55:53.260 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:55:53.267 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'caigou', '2023-10-11T22:55:53.264+0800', '', '127.0.0.1' );
2023-10-11 22:55:53.273 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2023-10-11 22:55:53.284 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:53.287 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou') order by m.order_num;
2023-10-11 22:55:53.433 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:53.433 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:55:53.436 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 22:55:53.436 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 22:55:53.437 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:55:53.438 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:55:53.438 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 22:55:53.439 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 22:55:53.439 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 22:55:53.441 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'caigou' group by days;
2023-10-11 22:55:53.441 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 22:55:53.443 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 22:55:53.444 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:55:53 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 22:56:00.814 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:00.814 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:00.818 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:56:00 | 耗时 2 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:56:00.818 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:56:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2023-10-11 22:56:00.819 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:56:00 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2023-10-11 22:56:02.079 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:02.097 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:56:02 | 耗时 15 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2023-10-11 22:56:02.098 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:56:02 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2023-10-11 22:56:03.365 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:03.372 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 22:56:03 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2023-10-11 22:56:05.468 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:05.471 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:56:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2023-10-11 22:56:05.472 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 22:56:05 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2023-10-11 22:56:06.539 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:06.539 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:06.541 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:56:06 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:56:06.541 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:56:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2023-10-11 22:56:06.542 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 22:56:06 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2023-10-11 22:56:07.159 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:07.161 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 22:56:07 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 22:56:22.457 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-11 22:56:22.461 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-11T22:56:22.458+0800' WHERE username = 'admin';
2023-10-11 22:56:22.463 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 22:56:22.468 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2023-10-11T22:56:22.465+0800', '', '127.0.0.1' );
2023-10-11 22:56:22.483 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:22.487 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2023-10-11 22:56:22.631 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:22.631 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:56:22.633 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 22:56:22.633 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 22:56:22.635 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:56:22.635 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 22:56:22.636 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 22:56:22.637 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 22:56:22.639 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 22:56:22.639 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 22:56:22.641 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 22:56:22.641 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2023-10-11 22:56:22.643 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 22:56:22 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 22:58:37.759 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:58:37.778 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 22:58:37 | 耗时 16 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2023-10-11 22:58:39.517 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 22:58:39.522 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 22:58:39 | 耗时 2 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 23:00:37.848 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:00:37.929 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 23:00:37 | 耗时 2 ms | SQL 语句：
INSERT INTO rurchase_request ( num, content, price, step, applicant, create_date ) VALUES ( 'RUR-1697036437884', '20231011采购申请', 78570, 0, '张三', '2023-10-11 23:00:37' );
2023-10-11 23:00:37.976 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:00:37.980 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:00:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2023-10-11 23:00:37.981 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:00:37 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2023-10-11 23:00:40.309 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:00:40.313 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 23:00:40 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'RUR-1697036437884';
2023-10-11 23:00:58.490 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-10-11 23:00:58.493 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-10-11T23:00:58.491+0800' WHERE username = 'caigou';
2023-10-11 23:00:58.495 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'caigou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-10-11 23:00:58.499 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'caigou', '2023-10-11T23:00:58.497+0800', '', '127.0.0.1' );
2023-10-11 23:00:58.507 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'caigou' and m.perms is not null and m.perms <> '';
2023-10-11 23:00:58.517 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:00:58.520 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'caigou') order by m.order_num;
2023-10-11 23:00:58.668 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:00:58.668 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:00:58.670 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2023-10-11 23:00:58.671 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2023-10-11 23:00:58.672 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-10-11 23:00:58.673 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 1 GROUP BY days ORDER BY days ASC;
2023-10-11 23:00:58.673 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-10-11 23:00:58.674 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 1 GROUP BY ct.id;
2023-10-11 23:00:58.674 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-10-11 23:00:58.675 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'caigou' group by days;
2023-10-11 23:00:58.675 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL( SUM(er.amount), 0 ) AS amount FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN stock_info er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) AND er.is_in = 2 GROUP BY days ORDER BY days ASC;
2023-10-11 23:00:58.678 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
SELECT IFNULL(sum( si.amount * si.price ),0) AS price, ct.`name` FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE si.is_in = 2 GROUP BY ct.id;
2023-10-11 23:00:58.680 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 23:00:58 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT count( 1 ) AS putCount FROM stock_info si WHERE si.is_in = 1 ) AS on1, ( SELECT count( 1 ) AS outCount FROM stock_info si WHERE si.is_in = 2 ) AS on2, ( SELECT IFNULL( SUM( si.amount * si.price ),0) AS price FROM stock_info si WHERE si.is_in = 1 ) AS on3;
2023-10-11 23:01:00.995 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:00.998 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 23:01:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2023-10-11 23:01:00.999 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 23:01:00 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2023-10-11 23:01:02.455 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:02.455 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:02.457 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 23:01:02 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 23:01:02.457 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 23:01:02 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'RUR-1697036437884';
2023-10-11 23:01:26.756 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:26.763 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 3 ms | SQL 语句：
INSERT INTO stock_put ( num, price, custodian, put_user, content, create_date ) VALUES ( 'PUT-1697036486758', 78570, '丁真', '丁真', '20231011采购入库', '2023-10-11 23:01:26' );
2023-10-11 23:01:26.768 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE name = 'i9-7900x' AND type_id = 3 AND is_in = 0;
2023-10-11 23:01:26.773 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 2 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in ) VALUES ( 'i9-7900x', 3, 'Intel i9 7900x', 10, '个', 3999, '2023-10-11 23:01:26', 0 );
2023-10-11 23:01:26.777 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 2 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in, parent_id ) VALUES ( 'i9-7900x', 3, 'Intel i9 7900x', 10, '个', 3999, '2023-10-11 23:01:26', 1, 36 );
2023-10-11 23:01:26.780 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 1 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( 'i9-7900x', 'Intel i9 7900x', '个', 10, 3, 'PUT-1697036486758', 3999, '2023-10-11 23:01:26' );
2023-10-11 23:01:26.782 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE name = 'X299' AND type_id = 3 AND is_in = 0;
2023-10-11 23:01:26.786 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 1 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in ) VALUES ( 'X299', 3, '微星X299', 10, '个', 1999, '2023-10-11 23:01:26', 0 );
2023-10-11 23:01:26.788 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 1 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in, parent_id ) VALUES ( 'X299', 3, '微星X299', 10, '个', 1999, '2023-10-11 23:01:26', 1, 38 );
2023-10-11 23:01:26.791 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 1 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( 'X299', '微星X299', '个', 10, 3, 'PUT-1697036486758', 1999, '2023-10-11 23:01:26' );
2023-10-11 23:01:26.792 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 0 ms | SQL 语句：
SELECT ID,name,type_id,type,amount,unit,content,price,create_date,is_in,to_user_id,parent_id FROM stock_info WHERE name = 'RX6650' AND type_id = 4 AND is_in = 0;
2023-10-11 23:01:26.795 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 1 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in ) VALUES ( 'RX6650', 4, 'RX6650', 10, '个', 1859, '2023-10-11 23:01:26', 0 );
2023-10-11 23:01:26.798 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 1 ms | SQL 语句：
INSERT INTO stock_info ( name, type_id, type, amount, unit, price, create_date, is_in, parent_id ) VALUES ( 'RX6650', 4, 'RX6650', 10, '个', 1859, '2023-10-11 23:01:26', 1, 40 );
2023-10-11 23:01:26.801 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 1 ms | SQL 语句：
INSERT INTO goods_belong ( name, type, unit, amount, type_id, num, price, create_date ) VALUES ( 'RX6650', 'RX6650', '个', 10, 4, 'PUT-1697036486758', 1859, '2023-10-11 23:01:26' );
2023-10-11 23:01:26.807 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 1 ms | SQL 语句：
UPDATE rurchase_request SET step=1 WHERE ID = 3;
2023-10-11 23:01:26.831 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:26.834 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2023-10-11 23:01:26.834 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-10-11 23:01:26 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2023-10-11 23:01:29.066 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:29.069 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 23:01:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2023-10-11 23:01:29.070 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-10-11 23:01:29 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2023-10-11 23:01:30.616 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:30.616 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:30.618 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-10-11 23:01:30 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 23:01:30.619 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 23:01:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2023-10-11 23:01:30.620 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 23:01:30 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2023-10-11 23:01:32.355 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:32.357 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM rurchase_request rr WHERE 1 = 1;
2023-10-11 23:01:32.358 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-10-11 23:01:32 | 耗时 0 ms | SQL 语句：
SELECT rr.id, rr.num, rr.content, rr.price, rr.process, rr.step, rr.applicant, rr.create_date AS createDate FROM rurchase_request rr WHERE 1 = 1 LIMIT 0,10;
2023-10-11 23:01:33.610 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:33.612 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 23:01:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM stock_put sp WHERE 1 = 1;
2023-10-11 23:01:33.613 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-10-11 23:01:33 | 耗时 0 ms | SQL 语句：
SELECT sp.id, sp.num, sp.price, sp.custodian, sp.put_user AS putUser, sp.content, sp.create_date AS createDate FROM stock_put sp WHERE 1 = 1 LIMIT 0,10;
2023-10-11 23:01:39.358 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:39.360 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-10-11 23:01:39 | 耗时 1 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1697036486758';
2023-10-11 23:01:41.594 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:41.595 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-10-11 23:01:41 | 耗时 0 ms | SQL 语句：
SELECT gb.id, gb.name, gb.type, gb.type_id AS typeId, gb.unit, gb.amount, gb.num, gb.price, gb.create_date AS createDate, ct.`name` AS consumableName FROM goods_belong gb LEFT JOIN consumable_type ct ON ( ct.id = gb.type_id ) WHERE 1 = 1 AND gb.num = 'PUT-1694531217441';
2023-10-11 23:01:44.266 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:44.266 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-10-11 23:01:44.268 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-10-11 23:01:44 | 耗时 0 ms | SQL 语句：
SELECT ID,name,content,create_date FROM consumable_type;
2023-10-11 23:01:44.271 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 23:01:44 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM stock_info si LEFT JOIN consumable_type ct ON (ct.id = si.type_id) WHERE 1 = 1 AND si.is_in = 0;
2023-10-11 23:01:44.272 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-10-11 23:01:44 | 耗时 0 ms | SQL 语句：
SELECT si.id, si.name, si.type, si.type_id AS typeId, si.amount, si.unit, si.content, si.price, si.create_date AS createDate, ct.`name` AS consumableType FROM stock_info si LEFT JOIN consumable_type ct ON ( ct.id = si.type_id ) WHERE 1 = 1 AND si.is_in = 0 LIMIT 0,10;
2023-10-11 23:03:23.254 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697034306175 paused.
2023-10-11 23:03:23.255 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-10-11 23:03:23.261 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2023-10-11 23:03:23.261 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2023-10-11 23:03:23.261 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697034306175 shutting down.
2023-10-11 23:03:23.261 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697034306175 paused.
2023-10-11 23:03:23.262 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_WIN-KJDA35RA4FP1697034306175 shutdown complete.
2023-10-11 23:03:23.265 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2023-10-11 23:03:23.266 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2023-10-11 23:03:23.269 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
